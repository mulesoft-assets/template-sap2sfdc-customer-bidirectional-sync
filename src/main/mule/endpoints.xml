<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:salesforce="http://www.mulesoft.org/schema/mule/salesforce"
      xmlns:sap="http://www.mulesoft.org/schema/mule/sap"
      xmlns:os="http://www.mulesoft.org/schema/mule/os"
      xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/os http://www.mulesoft.org/schema/mule/os/current/mule-os.xsd
http://www.mulesoft.org/schema/mule/sap http://www.mulesoft.org/schema/mule/sap/current/mule-sap.xsd
http://www.mulesoft.org/schema/mule/salesforce http://www.mulesoft.org/schema/mule/salesforce/current/mule-salesforce.xsd">
<flow name="schedulerFlow" doc:id="aff4106d-d2f6-4366-940a-a380dcb1cf73" >
    <scheduler doc:name="Scheduler" doc:id="58b7c776-fbee-4753-9bea-f6cc3e037efd" >
        <scheduling-strategy >
            <fixed-frequency frequency="${scheduler.frequency}" startDelay="${scheduler.startDelay}"/>
        </scheduling-strategy>
    </scheduler>
    <os:retrieve key="syncState" doc:name="Retrieve sync state" objectStore="SchedulerStatus" target="syncState">
        <os:default-value><![CDATA[fromA]]></os:default-value>
    </os:retrieve>
		<choice doc:id="b4703d83-780b-4e2d-bf5d-51b1566d66e2" doc:name="SyncState?">
        <when expression="#[(vars.syncState != 'running' and vars.syncState == 'fromA') or vars.syncState == null]">
            <os:store key="syncState" doc:name="Set sync state to running" doc:id="340ac5e0-764f-4164-aeaa-14e616987553" objectStore="SchedulerStatus">
                <os:value><![CDATA[running]]></os:value>
            </os:store>
            <flow-ref doc:name="queryFlowSAP" doc:id="b0c87553-d459-4f12-940c-0f8f19892266" name="queryFlowSAP" />
            <flow-ref doc:name="fromSAPtoSFDC" doc:id="43633fd4-8ec3-4899-8a82-93b88f816122" name="fromSAPtoSFDC" />


        </when>
        <when expression="#[vars.syncState != 'running' and vars.syncState == 'fromB']">
            <os:store key="syncState" doc:name="Set sync state to running" doc:id="5059b820-0895-4454-9e50-e686d0f07758" objectStore="SchedulerStatus">
                <os:value><![CDATA[running]]></os:value>
            </os:store>
            <flow-ref doc:name="queryFlowSFDC" doc:id="121efa5b-33a7-4c76-aa72-3112507c4c0b" name="queryFlowSFDC" />
            <flow-ref doc:name="fromSFDCtoSAP" doc:id="d8baf0c3-ace8-4d57-80c5-f7ea614d3946" name="fromSFDCtoSAP" />


        </when>
        <otherwise>
            <logger level="INFO" doc:name="Batch running" doc:id="bf955eec-4baf-4836-b7fd-7d77ff5ebcb1" message="Batch running" />
        </otherwise>
    </choice>
    <error-handler >
        <on-error-propagate enableNotifications="true" logException="true" doc:name="On Error Propagate" doc:id="488b507d-e26c-4c56-8759-8bb4f6645d71" type="ANY">
            <flow-ref doc:name="errorHandlingFlow" doc:id="afdaf73c-0137-4d60-84f6-5c41234771a3" name="errorHandlingFlow"/>
        </on-error-propagate>
    </error-handler>
</flow>
<flow name="queryFlowSAP">
    <os:retrieve key="watermark" objectStore="watermarkStoreA" target="lastQueryDateA" doc:name="Retrieve lastQueryDateSAP">
        <os:default-value ><![CDATA[#[read(p('watermark.default.expression'))]]]></os:default-value>
    </os:retrieve>
		<ee:transform doc:name="Prepare query params" doc:id="5679c5d6-7a58-4f46-aa68-e5ee513cc271" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/xml
---
{
    "ZSDFM_CUSTOMER_GETLIST": 
    "import":
    "IV_FROM_DATE" : vars.lastQueryDateA
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<sap:execute-synchronous-remote-function-call key="ZSDFM_CUSTOMER_GETLIST" doc:name="Query customers from SAP" doc:id="aec89a52-a638-440f-877a-2e37a5f4fed2" config-ref="SAP_Outbound">
			<ee:repeatable-file-store-stream />
		</sap:execute-synchronous-remote-function-call>
		<ee:transform doc:name="Extract data from SAP" doc:id="1236a17c-ccd6-4b90-95de-0bc85dd76844" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
payload.ZSDFM_CUSTOMER_GETLIST.tables.T_KNA1.*row map {
	AccountNumber : $.KUNNR,
	//removed single quote as the Salesforce query will then crash
	Name : $.NAME1 replace /(\')/ with " ",
	Phone : $.TELF1,
	Fax : $.TELFX,
	LastModifiedDate : $.LAST_MODIF_DATE,
	BillingCity : $.ORT01,
	LastModifiedById : $.AENAM
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<os:store doc:name="Update watermark value" doc:id="6aa5548c-0460-44ea-afb8-9d8921d15cfa" key="watermark" objectStore="watermarkStoreA" failOnNullValue="false">
			<os:value><![CDATA[#[if(payload==null) vars.lastQueryDateA as String else max(payload map $.LastModifiedDate) as String]]]></os:value>
		</os:store>
		<ee:transform doc:name="Ensure not null payload" doc:id="9fccdc12-5a34-402e-8167-f3433db25d67">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/java
---
if (payload==null) {} else payload]]></ee:set-payload>
			</ee:message>
		</ee:transform>
</flow>
<flow name="queryFlowSFDC">
    <os:retrieve key="watermark" objectStore="watermarkStoreB" target="lastQueryDateB" doc:name="Retrieve lastQueryDateSFDC">
        <os:default-value ><![CDATA[#[read(p('watermark.default.expression'))]]]></os:default-value>
    </os:retrieve>
		<salesforce:query doc:name="Query accounts from SFDC" doc:id="2e51dc43-6ffa-471a-a8dc-15f01e3e968d" config-ref="Salesforce_Config">
			<ee:repeatable-file-store-iterable />
			<salesforce:salesforce-query >SELECT Phone, AccountNumber, LastModifiedById, LastModifiedDate, Name, NumberOfEmployees, BillingCity, BillingStreet, BillingState, BillingPostalCode FROM Account WHERE LastModifiedDate &gt; :lastQueryDateB ORDER BY LastModifiedDate ASC LIMIT 200</salesforce:salesforce-query>
			<salesforce:parameters ><![CDATA[#[output applicaton/java
---
{
	"lastQueryDateB" : vars.lastQueryDateB
}]]]></salesforce:parameters>
		</salesforce:query>
		<os:store doc:name="Update watermark value" doc:id="9c253f4b-60f8-410b-9d94-02a3e39d9001" key="watermark" failOnNullValue="false" objectStore="watermarkStoreB" >
			<os:value ><![CDATA[#[if(sizeOf(payload)==0) vars.lastQueryDateB as String else (max(payload map $.LastModifiedDate) as String)]]]></os:value>
		</os:store>
</flow>
</mule>

        
